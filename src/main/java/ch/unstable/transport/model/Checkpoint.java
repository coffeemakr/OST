/**
 * Trasport API
 * The Transport API allows interested developers to build their own applications using public timetable data, whether they're on the web, the desktop or mobile devices. The aim of this inofficial API is to cover public transport within Switzerland. If you are looking for an officially supported source or need to download all data e.g in GTFS format, please check opendata.swiss. The source code of the Transport API can be found on GitHub, please ask any technical questions there. If you need a direct contact write an email to transport@opendata.ch. In order to be kept update on the future development of this API, please subscribe to our low-traffic Google Group.
 *
 * OpenAPI spec version: 1
 * Contact: transport@opendata.ch
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.unstable.transport.model;

import ch.unstable.transport.model.Location;
import ch.unstable.transport.model.Prognosis;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * A checkpoint represents an arrival or a departure point (in time and space) of a connection.
 **/
@ApiModel(description = "A checkpoint represents an arrival or a departure point (in time and space) of a connection.")
public class Checkpoint {
  
  @SerializedName("station")
  private Location station = null;
  @SerializedName("arrival")
  private String arrival = null;
  @SerializedName("departure")
  private String departure = null;
  @SerializedName("delay")
  private Integer delay = null;
  @SerializedName("platform")
  private Integer platform = null;
  @SerializedName("prognosis")
  private Prognosis prognosis = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Location getStation() {
    return station;
  }
  public void setStation(Location station) {
    this.station = station;
  }

  /**
   * The arrival time to the checkpoint
   **/
  @ApiModelProperty(value = "The arrival time to the checkpoint")
  public String getArrival() {
    return arrival;
  }
  public void setArrival(String arrival) {
    this.arrival = arrival;
  }

  /**
   * The departure time from the checkpoint
   **/
  @ApiModelProperty(value = "The departure time from the checkpoint")
  public String getDeparture() {
    return departure;
  }
  public void setDeparture(String departure) {
    this.departure = departure;
  }

  /**
   * The delay at this checkpoint, can be null if no prognosis is available.
   **/
  @ApiModelProperty(value = "The delay at this checkpoint, can be null if no prognosis is available.")
  public Integer getDelay() {
    return delay;
  }
  public void setDelay(Integer delay) {
    this.delay = delay;
  }

  /**
   * The arrival/departure platform
   **/
  @ApiModelProperty(value = "The arrival/departure platform")
  public Integer getPlatform() {
    return platform;
  }
  public void setPlatform(Integer platform) {
    this.platform = platform;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Prognosis getPrognosis() {
    return prognosis;
  }
  public void setPrognosis(Prognosis prognosis) {
    this.prognosis = prognosis;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Checkpoint checkpoint = (Checkpoint) o;
    return (this.station == null ? checkpoint.station == null : this.station.equals(checkpoint.station)) &&
        (this.arrival == null ? checkpoint.arrival == null : this.arrival.equals(checkpoint.arrival)) &&
        (this.departure == null ? checkpoint.departure == null : this.departure.equals(checkpoint.departure)) &&
        (this.delay == null ? checkpoint.delay == null : this.delay.equals(checkpoint.delay)) &&
        (this.platform == null ? checkpoint.platform == null : this.platform.equals(checkpoint.platform)) &&
        (this.prognosis == null ? checkpoint.prognosis == null : this.prognosis.equals(checkpoint.prognosis));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.station == null ? 0: this.station.hashCode());
    result = 31 * result + (this.arrival == null ? 0: this.arrival.hashCode());
    result = 31 * result + (this.departure == null ? 0: this.departure.hashCode());
    result = 31 * result + (this.delay == null ? 0: this.delay.hashCode());
    result = 31 * result + (this.platform == null ? 0: this.platform.hashCode());
    result = 31 * result + (this.prognosis == null ? 0: this.prognosis.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Checkpoint {\n");
    
    sb.append("  station: ").append(station).append("\n");
    sb.append("  arrival: ").append(arrival).append("\n");
    sb.append("  departure: ").append(departure).append("\n");
    sb.append("  delay: ").append(delay).append("\n");
    sb.append("  platform: ").append(platform).append("\n");
    sb.append("  prognosis: ").append(prognosis).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
